package basic.language.test.typesystem;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.ClassRule;
import jetbrains.mps.lang.test.runtime.TestParametersCache;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseEditorTestBody;
import jetbrains.mps.lang.test.runtime.TransformationTest;
import junit.framework.Assert;

@MPSLaunch
public class AddTypeIntentionIsAvailableOnInit_Test extends BaseTransformationTest {
  @ClassRule
  public static final TestParametersCache ourParamCache = new TestParametersCache(AddTypeIntentionIsAvailableOnInit_Test.class, "${project_home}", "r:4b07ccb3-afba-44b5-b0a9-25c537802a99(basic.language.test.typesystem@tests)", false);

  public AddTypeIntentionIsAvailableOnInit_Test() {
    super(ourParamCache);
  }

  @Test
  public void test_AddTypeIntentionIsAvailableOnInit() throws Throwable {
    new TestBody(this).testMethod();
  }

  /*package*/ static class TestBody extends BaseEditorTestBody {

    /*package*/ TestBody(TransformationTest owner) {
      super(owner);
    }

    @Override
    public void testMethodImpl() throws Exception {
      initEditorComponent("2289659709945725282", "");
      Assert.assertTrue(isIntentionApplicable("basic.language.intentions.addTypeToVariable_Intention", myStart.getNode()));
    }
  }
}
