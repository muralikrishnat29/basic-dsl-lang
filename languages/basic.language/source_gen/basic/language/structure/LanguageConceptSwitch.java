package basic.language.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int BinaryExpression = 0;
  public static final int DivExpression = 1;
  public static final int EmptyStatement = 2;
  public static final int EqualsExpression = 3;
  public static final int Expression = 4;
  public static final int ExpressionStatement = 5;
  public static final int MinusExpression = 6;
  public static final int MulExpression = 7;
  public static final int NotEqualsExpression = 8;
  public static final int NumberLiteral = 9;
  public static final int PlusExpression = 10;
  public static final int Statement = 11;
  public static final int StringLiteral = 12;
  public static final int Variable = 13;
  public static final int Workbook = 14;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xdf20d2ac476c4ef8L, 0x8b3f4802becda85fL);
    builder.put(0x5d451e22fa44bdb5L, BinaryExpression);
    builder.put(0x63aa2eee42e746b5L, DivExpression);
    builder.put(0x5d451e22fa438ff3L, EmptyStatement);
    builder.put(0x5d451e22fa4556daL, EqualsExpression);
    builder.put(0x5d451e22fa4440a7L, Expression);
    builder.put(0x63aa2eee42dcd84fL, ExpressionStatement);
    builder.put(0x5d451e22fa447d47L, MinusExpression);
    builder.put(0x5d451e22fa4499d6L, MulExpression);
    builder.put(0x5d451e22fa4556dbL, NotEqualsExpression);
    builder.put(0x5d451e22fa441083L, NumberLiteral);
    builder.put(0x5d451e22fa4443b7L, PlusExpression);
    builder.put(0x5d451e22fa438ff2L, Statement);
    builder.put(0x5d451e22fa45618bL, StringLiteral);
    builder.put(0x5d451e22fa43875dL, Variable);
    builder.put(0x5d451e22fa438438L, Workbook);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
