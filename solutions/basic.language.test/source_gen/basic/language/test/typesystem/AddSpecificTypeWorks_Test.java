package basic.language.test.typesystem;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.ClassRule;
import jetbrains.mps.lang.test.runtime.TestParametersCache;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseEditorTestBody;
import jetbrains.mps.lang.test.runtime.TransformationTest;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

@MPSLaunch
public class AddSpecificTypeWorks_Test extends BaseTransformationTest {
  @ClassRule
  public static final TestParametersCache ourParamCache = new TestParametersCache(AddSpecificTypeWorks_Test.class, "${project_home}", "r:4b07ccb3-afba-44b5-b0a9-25c537802a99(basic.language.test.typesystem@tests)", false);

  public AddSpecificTypeWorks_Test() {
    super(ourParamCache);
  }

  @Test
  public void test_AddSpecificTypeWorks() throws Throwable {
    new TestBody(this).testMethod();
  }

  /*package*/ static class TestBody extends BaseEditorTestBody {

    /*package*/ TestBody(TransformationTest owner) {
      super(owner);
    }

    @Override
    public void testMethodImpl() throws Exception {
      initEditorComponent("2289659709945864806", "");
      invokeParameterizedIntention("basic.language.intentions.addSpecificType_Intention", CONCEPTS.BIntegerType$GV, myStart.getNode());
    }
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept BIntegerType$GV = MetaAdapterFactory.getConcept(0xdf20d2ac476c4ef8L, 0x8b3f4802becda85fL, 0x63aa2eee42f488ebL, "basic.language.structure.BIntegerType");
  }
}
